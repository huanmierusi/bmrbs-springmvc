/**
 * Generated by Gas3 v2.0.0 (Granite Data Services).
 *
 * WARNING: DO NOT CHANGE THIS FILE. IT MAY BE OVERWRITTEN EACH TIME YOU USE
 * THE GENERATOR. INSTEAD, EDIT THE INHERITED CLASS (MrbsSchedule.as).
 */

package com.baidu.ite.mrbs.entity {

    import flash.events.EventDispatcher;
    import flash.utils.IDataInput;
    import flash.utils.IDataOutput;
    import flash.utils.IExternalizable;
    import flash.utils.getQualifiedClassName;
    import mx.collections.ListCollectionView;
    import mx.core.IUID;
    import mx.utils.UIDUtil;
    import org.granite.collections.IPersistentCollection;
    import org.granite.meta;
    import org.granite.tide.IEntity;
    import org.granite.tide.IEntityManager;
    import org.granite.tide.IPropertyHolder;

    use namespace meta;

    [Managed]
    public class MrbsScheduleBase implements IExternalizable, IUID {

        protected var _em:IEntityManager = null;

        private var __initialized:Boolean = true;
        private var __detachedState:String = null;

        private var _createBy:String;
        private var _description:String;
        private var _endTime:Date;
        private var _id:Number;
        private var _mrbsRepeat:MrbsRepeat;
        private var _mrbsRoom:MrbsRoom;
        private var _mrbsUsers:ListCollectionView;
        private var _num:int;
        private var _preside:String;
        private var _startTime:Date;
        private var _title:String;

        meta function isInitialized(name:String = null):Boolean {
            if (!name)
                return __initialized;

            var property:* = this[name];
            return (
                (!(property is MrbsSchedule) || (property as MrbsSchedule).meta::isInitialized()) &&
                (!(property is IPersistentCollection) || (property as IPersistentCollection).isInitialized())
            );
        }

        [Transient]
        public function meta_getEntityManager():IEntityManager {
            return _em;
        }
        public function meta_setEntityManager(em:IEntityManager):void {
            _em = em;
        }

        public function set createBy(value:String):void {
            _createBy = value;
        }
        public function get createBy():String {
            return _createBy;
        }

        public function set description(value:String):void {
            _description = value;
        }
        public function get description():String {
            return _description;
        }

        public function set endTime(value:Date):void {
            _endTime = value;
        }
        public function get endTime():Date {
            return _endTime;
        }

        public function set id(value:Number):void {
            _id = value;
        }
        public function get id():Number {
            return _id;
        }

        public function set mrbsRepeat(value:MrbsRepeat):void {
            _mrbsRepeat = value;
        }
        public function get mrbsRepeat():MrbsRepeat {
            return _mrbsRepeat;
        }

        public function set mrbsRoom(value:MrbsRoom):void {
            _mrbsRoom = value;
        }
        public function get mrbsRoom():MrbsRoom {
            return _mrbsRoom;
        }

        public function set mrbsUsers(value:ListCollectionView):void {
            _mrbsUsers = value;
        }
        public function get mrbsUsers():ListCollectionView {
            return _mrbsUsers;
        }

        public function set num(value:int):void {
            _num = value;
        }
        public function get num():int {
            return _num;
        }

        public function set preside(value:String):void {
            _preside = value;
        }
        public function get preside():String {
            return _preside;
        }

        public function set startTime(value:Date):void {
            _startTime = value;
        }
        public function get startTime():Date {
            return _startTime;
        }

        public function set title(value:String):void {
            _title = value;
        }
        public function get title():String {
            return _title;
        }

        public function set uid(value:String):void {
            // noop...
        }
        public function get uid():String {
        	if (isNaN(_id))
        		return UIDUtil.createUID();
        	return getQualifiedClassName(this) + "#[" + String(_id) + "]";
        	
        }

        public function meta_merge(em:IEntityManager, obj:*):void {
            var src:MrbsScheduleBase = MrbsScheduleBase(obj);
            __initialized = src.__initialized;
            __detachedState = src.__detachedState;
            if (meta::isInitialized()) {
               em.meta_mergeExternal(src._createBy, _createBy, null, this, 'createBy', function setter(o:*):void{_createBy = o as String});
               em.meta_mergeExternal(src._description, _description, null, this, 'description', function setter(o:*):void{_description = o as String});
               em.meta_mergeExternal(src._endTime, _endTime, null, this, 'endTime', function setter(o:*):void{_endTime = o as Date});
               em.meta_mergeExternal(src._id, _id, null, this, 'id', function setter(o:*):void{_id = o as Number});
               em.meta_mergeExternal(src._mrbsRepeat, _mrbsRepeat, null, this, 'mrbsRepeat', function setter(o:*):void{_mrbsRepeat = o as MrbsRepeat});
               em.meta_mergeExternal(src._mrbsRoom, _mrbsRoom, null, this, 'mrbsRoom', function setter(o:*):void{_mrbsRoom = o as MrbsRoom});
               em.meta_mergeExternal(src._mrbsUsers, _mrbsUsers, null, this, 'mrbsUsers', function setter(o:*):void{_mrbsUsers = o as ListCollectionView});
               em.meta_mergeExternal(src._num, _num, null, this, 'num', function setter(o:*):void{_num = o as int});
               em.meta_mergeExternal(src._preside, _preside, null, this, 'preside', function setter(o:*):void{_preside = o as String});
               em.meta_mergeExternal(src._startTime, _startTime, null, this, 'startTime', function setter(o:*):void{_startTime = o as Date});
               em.meta_mergeExternal(src._title, _title, null, this, 'title', function setter(o:*):void{_title = o as String});
            }
            else {
               em.meta_mergeExternal(src._id, _id, null, this, 'id', function setter(o:*):void{_id = o as Number});
            }
        }

        public function readExternal(input:IDataInput):void {
            __initialized = input.readObject() as Boolean;
            __detachedState = input.readObject() as String;
            if (meta::isInitialized()) {
                _createBy = input.readObject() as String;
                _description = input.readObject() as String;
                _endTime = input.readObject() as Date;
                _id = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
                _mrbsRepeat = input.readObject() as MrbsRepeat;
                _mrbsRoom = input.readObject() as MrbsRoom;
                _mrbsUsers = input.readObject() as ListCollectionView;
                _num = input.readObject() as int;
                _preside = input.readObject() as String;
                _startTime = input.readObject() as Date;
                _title = input.readObject() as String;
            }
            else {
                _id = function(o:*):Number { return (o is Number ? o as Number : Number.NaN) } (input.readObject());
            }
        }

        public function writeExternal(output:IDataOutput):void {
            output.writeObject(__initialized);
            output.writeObject(__detachedState);
            if (meta::isInitialized()) {
                output.writeObject((_createBy is IPropertyHolder) ? IPropertyHolder(_createBy).object : _createBy);
                output.writeObject((_description is IPropertyHolder) ? IPropertyHolder(_description).object : _description);
                output.writeObject((_endTime is IPropertyHolder) ? IPropertyHolder(_endTime).object : _endTime);
                output.writeObject((_id is IPropertyHolder) ? IPropertyHolder(_id).object : _id);
                output.writeObject((_mrbsRepeat is IPropertyHolder) ? IPropertyHolder(_mrbsRepeat).object : _mrbsRepeat);
                output.writeObject((_mrbsRoom is IPropertyHolder) ? IPropertyHolder(_mrbsRoom).object : _mrbsRoom);
                output.writeObject((_mrbsUsers is IPropertyHolder) ? IPropertyHolder(_mrbsUsers).object : _mrbsUsers);
                output.writeObject((_num is IPropertyHolder) ? IPropertyHolder(_num).object : _num);
                output.writeObject((_preside is IPropertyHolder) ? IPropertyHolder(_preside).object : _preside);
                output.writeObject((_startTime is IPropertyHolder) ? IPropertyHolder(_startTime).object : _startTime);
                output.writeObject((_title is IPropertyHolder) ? IPropertyHolder(_title).object : _title);
            }
            else {
                output.writeObject(_id);
            }
        }
    }
}
